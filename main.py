from aiogram import Bot, Dispatcher, types, executor
import logging
import os

API_TOKEN = os.getenv("BOT_TOKEN")
ADMIN_ID = int(os.getenv("ADMIN_ID", "123456789"))  # –ó–∞–º–µ–Ω–∏—Ç—å –Ω–∞ —Å–≤–æ–π ID

logging.basicConfig(level=logging.INFO)
bot = Bot(token=API_TOKEN)
dp = Dispatcher(bot)

USERS_FILE = "users.txt"

def save_user(user_id):
    try:
        with open(USERS_FILE, "r") as f:
            users = set(f.read().splitlines())
    except FileNotFoundError:
        users = set()
    users.add(str(user_id))
    with open(USERS_FILE, "w") as f:
        f.write("\n".join(users))

def get_user_count():
    try:
        with open(USERS_FILE, "r") as f:
            return len(set(f.read().splitlines()))
    except FileNotFoundError:
        return 0

@dp.message_handler(commands=['start'])
async def start_handler(message: types.Message):
    user_id = message.from_user.id
    save_user(user_id)
    await message.answer(
        "–ü—Ä–∏–≤–µ—Ç, —Å–æ–ª–Ω—Ü–µ! ‚òÄÔ∏è\n"
        "–¢—ã –≤ —Ç–∞–π–º–µ—Ä–µ –ø–æ –º–µ—Ç–æ–¥—É —Å—É–ø–µ—Ä–∫–æ–º–ø–µ–Ω—Å–∞—Ü–∏–∏.\n\n"
        "–ó–∞–≥–∞—Ä –ø–æ–ª—É—á–∞–µ—Ç—Å—è —Ä–æ–≤–Ω—ã–π, –±–µ–∑ –æ–∂–æ–≥–æ–≤ ‚Äî –µ—Å–ª–∏ —Å–ª–µ–¥–æ–≤–∞—Ç—å —à–∞–≥–∞–º: "
        "'–ø–µ—Ä–µ–≤–µ—Ä–Ω–∏—Å—å, –æ—Ç–¥–æ—Ö–Ω–∏, –≤ —Ç–µ–Ω—å'.\n\n"
        "–ù–∞—á–∏–Ω–∞–π —Å —à–∞–≥–∞ 1 ‚Äî –∏–ª–∏ –≤—ã–±–µ—Ä–∏ –ª—é–±–æ–π:"
    )

@dp.message_handler(commands=['stats'])
async def stats_handler(message: types.Message):
    if message.from_user.id == ADMIN_ID:
        count = get_user_count()
        await message.reply(f"üë• –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –≤—Å–µ–≥–æ: {count}")
    else:
        await message.reply("‚õî –î–æ—Å—Ç—É–ø –∑–∞–ø—Ä–µ—â—ë–Ω.")

if __name__ == '__main__':
    executor.start_polling(dp, skip_updates=True)